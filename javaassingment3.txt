Q.1
solution:-
package javaassingment3;

public class Triangle {
	int w,b,h;
	double a,p;
	

	public Triangle(int w, int b, int h) {
		super();
		this.w = w;
		this.b = b;
		this.h = h;
	}
	public void calTriangle() {
		a=0.5*b*h;
		p=w+b+h;
		
	}
	public void display() {
		System.out.println("Area of Triangle = "+a);
		System.out.println("perimeter of triangle = "+p);
	}


	public static void main(String[] args) {
		Triangle triangle=new Triangle(3,4,5);
		triangle.calTriangle();
		triangle.display();

	}

}


==================================================================================================================================
Q.2
solution:-
package javaassingment3;

	public class Complex {
	private double real;
	double img,img1;
	public Complex(double real,double img) {
	 super();
	this.real=real;
	this.img=img;
	}

	public Complex add(Complex num) {
	double real=this.real+num.real;
	double img=this.img+num.img;
	return new Complex(real,img);

	}
	public Complex sub(Complex num) {
	double real=this.real-num.real;
	double img=this.img-num.img;
	return new Complex(real,img);

	}
	public void display() {
	System.out.println(real +  "+"+img+ "i");


	}
	public void display1() {

	System.out.println(real + "-"+ img+ "i");

	}public Complex mul(Complex num) {
	double real=this.real*num.real;
	double img=this.img*num.img;
	return new Complex(real,img);

	}
	public void display3() {
	System.out.println(real +  "*"+img+ "i");


	}
	public Complex div(Complex num) {
	double real=this.real/num.real;
	double img=this.img/num.img;
	return new Complex(real,img);

	}
	public void display4() {
	System.out.println(real +  "/"+img+ "i");


	}



	public static void main(String[] args) {
	Complex complex=new Complex(4, 5);
	Complex complex1=new Complex(1, 2);

	Complex result=complex.add(complex1);
	    result.display();
	Complex result1=complex.sub(complex1);
	result1.display1();
	Complex result2=complex.mul(complex1);
	result2.display3();
	Complex result3=complex.div(complex1);
	result3.display4();
	}

	}





===================================================================================================================================================================
Q3
Solution:-
package javaassingment3;

	public class Employee {
		private double sal;
		private int hr;

		public void getInfo(long sal, int hr) {

			this.sal = sal;
			this.hr = hr;
		}
		public void addSal() 
		{
	    if ( sal < 500)
	    {
	    	sal =sal+10;
	    }}
	    public void addWork()
	    { if (hr>6)
	    {
	    	sal =sal+5;
	    }
	    	
		}
	    @Override
		public String toString() {
			return "Employee [salary=" + sal + ", hoursworkprday=" + hr + "]";
		}
		public static void main(String[] args) {
	    	
	    	 Employee employee =new Employee();
	    	 employee.getInfo(50000, 10);
	    	 employee.addSal();
	    	 employee.addWork();
	    	 System.out.println(employee);
		}
	}

================================================================================================================================================================
Q4
solution:- 
package javaassignment3;

import java.util.Arrays;
import java.util.Iterator;
import java.util.Scanner;

 class Matrix {
	
	int row;
	int column;
	int[][] arr;
	Scanner sc = new Scanner(System.in);
	public Matrix(int r, int c) {
		row = r;
		column = c;
		arr = new int[row][column];
	}

	public int getRows() {
		return row;
	}
	public int getColumns() {
		return column;
	}
	public int getElement(int r, int c) 
	{
		return arr[r][c];
	}
	public void setElement(int r, int c, int element) 
	{
		arr[r][c] = element;
	}

	public static Matrix add(Matrix x, Matrix y)
	{
		if ((x.row == y.row) && (x.column == y.column))
		{
			Matrix m = new Matrix(x.row, x.column);
			for (int i = 0; i < m.row; i++) 
			{
				for (int j = 0; j < m.column; j++) 
				{
					m.setElement(i, j, (x.getElement(i, j) + y.getElement(i, j)));
				}
			}
			return m;
		} 
		else 
		{
			System.out.println("Matrices can not be added");
			return new Matrix(0, 0);
		}
	}

	@Override
	public String toString() {
		return "Matrix [row=" + row + ", column=" + column + ", arr=" + Arrays.toString(arr) + ", sc=" + sc
				+ ", getRows()=" + getRows() + ", getColumns()=" + getColumns() + "]";
	}
	
}

================================================================================================================================================================
Q.5
solution:-
package javaassignment3;

public class Time {
	private int hr, min, seconds;

	public Time() {
		super();
	}

	public Time(int hr, int min, int seconds) {
		this.hr = hr;
		this.min = min;
		this.seconds = seconds;
	}

	public int getHr() {

		return hr;
	}

	public void setHr(int hr) {
		if (hr <= 24)
			this.hr = hr;
		else
			System.out.println("plase enter hours between 24");
	}

	public int getMin() {

		return min;
	}

	public void setMin(int min) {
		if (min <= 60)
			this.min = min;
		else
			System.out.println("plase enter minits between 60");
	}

	public int getSeconds() {
		return seconds;
	}

	public void setSeconds(int seconds) {
		if (seconds <= 60)
			this.seconds = seconds;
		else
			System.out.println("plase enter seconds between 60");

	}

	@Override
	public String toString() {
		return "Time \nhr  =" + hr +
				",\nmin =" + min + 
				",\nseconds=" + seconds;
	}

	public static void main(String[] args) 
	{

		Time time =new Time(25, 20, 60);
		System.out.println(time);
		
		
	}

}

================================================================================================================================================================
Q.6
solution:-
package javaassingment3;

public class SavingAccount {
	private static double annualinterestrate;
	private double savingbalance;

	public SavingAccount(double savingbalance) {
		super();
		this.savingbalance = savingbalance;
	}

	public void calMonthlyInterest() {
		double monthlyInterest = (savingbalance * annualinterestrate) / 12;
		savingbalance = savingbalance + annualinterestrate;
		System.out.println(monthlyInterest);
		System.out.println(savingbalance);
	}

	public static void modifyInterest(double nrate) {
		annualinterestrate = nrate;

	}

	public double savingbal() {
		return savingbalance;
	}

	public static void main(String[] args) {
		SavingAccount saver1 = new SavingAccount(2000.00);
		SavingAccount saver2 = new SavingAccount(3000.00);
		SavingAccount.modifyInterest(0.03);
		saver1.calMonthlyInterest();
		System.out.println("after new bal month" + saver1.savingbal());
		SavingAccount.modifyInterest(0.14);
		// saver2.calMonthlyInterest();
		System.out.println("after 1 month" + saver2.savingbal());

	}

}
========================================================================================================================================================================
Q.7
Solution :-
public class Account {
	private int accNo;
	String accHolderName;
	double bal;
	double amount;

	public Account() {
		System.out.println("default constroustor");
		accNo = 0;
		accHolderName = "";
		bal = 0;

	}

	public Account(int accNo, String accHolderName, double bal) {
		System.out.println("para constroustor");
		this.accNo = accNo;
		this.accHolderName = accHolderName;
		this.bal = bal;
	}

	public int getAccNo() {
		return accNo;
	}

	public void setAccNo(int accNo) {
		this.accNo = accNo;
	}

	public String getAccHolderName() {
		return accHolderName;
	}

	public void setAccHolderName(String accHolderName) {
		this.accHolderName = accHolderName;
	}

	public double getBal() {
		return bal;
	}

	public void setBal(double bal) {
		this.bal = bal;
	}

	// withdraw()
	public boolean withdraw(double amount) {
		if (amount < 0) {
			System.out.println("withdraw amount is not be less than 0");
			return false;
		} else if (bal < amount) {
			System.out.println("balance can not be less than amount");
			return false;
		} else {
			bal = bal - amount;
			return true;
		}
	}

	public boolean deposite(double amount) {
		if (amount < 0) {
			System.out.println("deposite amount is not be less than 0");
			return false;
		}

		else {
			bal = bal +amount;
			return true;
		}
	}
		public boolean transfer(Account account1,Account account2,double amount) {
			if (account1.getBal() < 0) {
				System.out.println("less funds are available");
				return false;
			}

			else {
				double bal1=account1.getBal();
				account1.setBal(bal1-amount);
				double bal2=account2.getBal();
				account2.setBal(bal2+amount);
				
				return true;
			}
	}
	// deposit

	@Override
	public String toString() {
		return "Account [accNo=" + accNo + ", accHolderName=" + accHolderName + ", bal=" + bal + "]";
	}

}

*****main**************
package hdfc;

public class TestAccount {

	public static void main(String[] args) {
		Account account = new Account();
		System.out.println(account); // to string

		Account account1 = new Account(50, "uma", 8000);
		System.out.println(account1); //to string is called
		account1.setAccHolderName("chetna");
		account1.setBal(9000);
		System.out.println(account1.getAccHolderName());
		System.out.println(account1.getBal());
		System.out.println(account1.getAccNo());

	}

}
****************main2****************************
package hdfc;

import java.util.Scanner;

public class TestAccount2 {

	public static void main(String[] args) {
		double amt,  cash;
		boolean result, result1,result2;
		Scanner sc = new Scanner(System.in);

		Account account1 = new Account(1, "uma", 10000);
		Account account2 = new Account(2, "pma", 20000);
		System.out.println(account1);// to string

		System.out.println("enter withdraw amount = ");
		amt = sc.nextDouble();
		System.out.println("calling withdraw amount");
		result = account1.withdraw(amt);
		if (result == true)
			System.out.println("withdraw is successfully");
		else
			System.out.println("there is an error");
		System.out.println("new balance is " + account1.getBal());

		System.out.println("=========================================");
		System.out.println("calling deposite amount");
		System.out.println("enter deposite amount = ");
		cash = sc.nextDouble();

		result1 = account1.deposite(cash);
		if (result == true)
			System.out.println("deposite is successfully");
		else
			System.out.println("ther is error");
		
		System.out.println("new balance is " +account1.getBal());
		
		System.out.println("=========================================");
		System.out.println("calling transfer amount");
		System.out.println("enter transfer amount = ");
		double cash1 = sc.nextDouble();

		result2 = account1.transfer(account1, account2, cash1);
		if (result2 == true)
			System.out.println("transfer is successfully");
		else
			System.out.println("ther is error");
		System.out.println("new balance is " + account1.getBal());
	}

}
=========================================================================================================================================================================
Q.8
solution:-
package javaassignment3;

 class Book
{
	private String name;
	private int number;
	
	public Book(String name, int number) {
		super();
		this.name = name;
		this.number = number;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getNumber() {
		return number;
	}

	public void setNumber(int number) {
		this.number = number;
	}

	public void add()
	{
		setName(getName());
		setNumber(getNumber());
	}
	
	@Override
	public String toString() {
		return "Book [name=" + name + ", number=" + number + "]";
	} 
}

public class Library {


	public static void main(String[] args) 
	{
		Book book[] =new Book[3];
		book[0]=new Book("java", 10);
		book[1]=new Book ("sql",2);
		book[2]=new Book ("DATABASE",4);
		for (int i = 0; i < book.length; i++) 
		{
			System.out.println(book[i]);
		}

	}

}


==========================================================================================================================================================================
q9
SOlution:-

package assignment3java;



class Product
{
	private String  name;
	private double price;
	private  int productid=0;
	private double total;
	
	public Product(String name,double price) {
		super();
		this.name = name;
		this. price=price;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public int getProductid() {
		return productid;
	}

	public void setProductid() {
		this.productid = productid+1;
	}
	
	public void setTotal()
	{
		total= price * productid;
	}
	public double getTotal()
	{
		return total;
	}

	@Override
	public String toString() {
		return "product [name=" + name + ", price=" + price + ", productid=" + productid + ", total=" + total + "]";
	}
	
}
class ShoppingCart 
{
	public static void main(String[] args) {
		 double totalCost=0;
   Product product []=new  Product[3];
   product [0]= new  Product("milk", 50.23);
   product [1]= new  Product("coconut", 150);
   product [2]= new  Product("butter",550);
		
   for (int i = 0; i < product.length; i++) 
   {
	   product[i].setProductid();
	  product[i].setTotal();
	  totalCost = totalCost +product[i].getTotal();
   }
   for (int i = 0; i < product.length; i++) 
   {
	   
	   System.out.println(product[i]);
   }
		
 System.out.println("total bill is       =         "+totalCost);
   
	}
	
	
}


